@attribute [Route(RouteConstants.ProductDetails)]
@using WasmStore.Shared.DTOs;
@inject IProductService ProductService;
<h3>ProductDetails</h3>

@if(product == null)
{
    <span>Loading Product...</span>
} else
{
    // Give the imageless DB entry a placeholder image.
    @if (product.Image != null)
    {
        var base64Image = Convert.ToBase64String(product.Image);
        imageSrc = $"data:image/jpeg;base64,{base64Image}";
    }
    <div class="media">
        <div class="media-img-wrapper me-2">
            <img class="media-img" src="@imageSrc" alt="@product.Name" />
            <div class="small-img-container">
                <img class="small-img" src="/images/img_placeholder.jpg" alt="Small Image 1" />
                <img class="small-img" src="/images/img_placeholder.jpg" alt="Small Image 2" />
                <img class="small-img" src="/images/img_placeholder.jpg" alt="Small Image 3" />
                <img class="small-img" src="/images/img_placeholder.jpg" alt="Small Image 2" />
                <img class="small-img" src="/images/img_placeholder.jpg" alt="Small Image 3" />
                <img class="small-img" src="/images/img_placeholder.jpg" alt="Small Image 3" />
            </div>
        </div>
        <div class="media-body">
            <h2 class="mb-0">@product.Name</h2>
            <p>@product.Description</p>
            <h4 class="price">
                $@product.Price
            </h4>
            <h3>Delete Product</h3>
            <button @onclick="DeleteProduct">Delete</button>
        </div>
    </div>
}


@code {
    string imageSrc = "/images/img_placeholder.jpg";
    private ProductDto? product = null;
    public string message = string.Empty;

    [Parameter]
    public Guid Id { get; set; }
    private async Task DeleteProduct()
    {
        var response = await ProductService.DeleteProductByIdAsync(Id);
    }

    protected override async Task OnParametersSetAsync() {
        message = "Your Product Loading...";
        var result = await ProductService.GetProductByIdAsync(Id);
        if(result.Success)
        {
            product = result.Data;
        }
        else
        {
            if (result.Message != null && result.Message != string.Empty)
                message = result.Message;
            else
                message = "Error getting the error message.";
        }
    }
}
